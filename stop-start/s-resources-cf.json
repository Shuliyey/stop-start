{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application's resources outside of Lambdas and Api Gateway",
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "IamPolicyLambda": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "${stage}-${project}-lambda",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "*",
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRoleLambda"
          }
        ]
      }
    }
  },
  "Stop": {
    "Type" : "AWS::Events::Rule",
    "Properties" : {
      "Description" : "Rule to call the stop-start function to stop all instances",
      "Name" : "stop",
      "RoleArn" : String,
      "ScheduleExpression" : "cron(0 0 18 ? * MON-FRI)",
      "State" : "ENABLED",
      "Targets" : [ {
        "Arn" : String,
        "Id" : String,
        "Input" : { "stopStart": "stop", "reportOnly": false, "environment": "dev", "tableName": "stop-start", "region": "ap-southeast-2" },
        "InputPath" : String
      } ]
    }
  },
  "Start": {
    "Type" : "AWS::Events::Rule",
    "Properties" : {
      "Description" : "Rule to call the stop-start function to start all instances",
      "Name" : "start",
      "RoleArn" : String,
      "ScheduleExpression" : "cron(0 0 6 ? * MON-FRI)",
      "State" : "ENABLED",
      "Targets" : [ {
        "Arn" : String,
        "Id" : String,
        "Input" : String,
        "InputPath" : String
      } ]
    }
  },
  "Outputs": {
    "IamRoleArnLambda": {
      "Description": "ARN of the lambda IAM role",
      "Value": {
        "Fn::GetAtt": [
          "IamRoleLambda",
          "Arn"
        ]
      }
    }
  }
}